var L=Object.defineProperty;var M=(v,e,t)=>e in v?L(v,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):v[e]=t;var c=(v,e,t)=>M(v,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();var m=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},E={exports:{}};(function(v,e){(function(t,o){o()})(m,function(){function t(s,r){return typeof r>"u"?r={autoBom:!1}:typeof r!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),r={autoBom:!r}),r.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(s.type)?new Blob(["\uFEFF",s],{type:s.type}):s}function o(s,r,u){var g=new XMLHttpRequest;g.open("GET",s),g.responseType="blob",g.onload=function(){h(g.response,r,u)},g.onerror=function(){console.error("could not download file")},g.send()}function i(s){var r=new XMLHttpRequest;r.open("HEAD",s,!1);try{r.send()}catch{}return 200<=r.status&&299>=r.status}function n(s){try{s.dispatchEvent(new MouseEvent("click"))}catch{var r=document.createEvent("MouseEvents");r.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),s.dispatchEvent(r)}}var a=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof m=="object"&&m.global===m?m:void 0,l=a.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),h=a.saveAs||(typeof window!="object"||window!==a?function(){}:"download"in HTMLAnchorElement.prototype&&!l?function(s,r,u){var g=a.URL||a.webkitURL,f=document.createElement("a");r=r||s.name||"download",f.download=r,f.rel="noopener",typeof s=="string"?(f.href=s,f.origin===location.origin?n(f):i(f.href)?o(s,r,u):n(f,f.target="_blank")):(f.href=g.createObjectURL(s),setTimeout(function(){g.revokeObjectURL(f.href)},4e4),setTimeout(function(){n(f)},0))}:"msSaveOrOpenBlob"in navigator?function(s,r,u){if(r=r||s.name||"download",typeof s!="string")navigator.msSaveOrOpenBlob(t(s,u),r);else if(i(s))o(s,r,u);else{var g=document.createElement("a");g.href=s,g.target="_blank",setTimeout(function(){n(g)})}}:function(s,r,u,g){if(g=g||open("","_blank"),g&&(g.document.title=g.document.body.innerText="downloading..."),typeof s=="string")return o(s,r,u);var f=s.type==="application/octet-stream",p=/constructor/i.test(a.HTMLElement)||a.safari,y=/CriOS\/[\d]+/.test(navigator.userAgent);if((y||f&&p||l)&&typeof FileReader<"u"){var w=new FileReader;w.onloadend=function(){var S=w.result;S=y?S:S.replace(/^data:[^;]*;/,"data:attachment/file;"),g?g.location.href=S:location=S,g=null},w.readAsDataURL(s)}else{var P=a.URL||a.webkitURL,b=P.createObjectURL(s);g?g.location=b:location.href=b,g=null,setTimeout(function(){P.revokeObjectURL(b)},4e4)}});a.saveAs=h.saveAs=h,v.exports=h})})(E);var z=E.exports;const d=12,C=26;class A{constructor(e,t){c(this,"grid");c(this,"onChange");this.grid=e,this.onChange=t}updatePixel(e,t,o="black"){const i=this.grid.map(n=>[...n]);i[e][t]=o,this.grid=i,this.onChange(i)}getGrid(){return this.grid.map(e=>[...e])}setGrid(e){this.grid=e.map(t=>[...t]),this.onChange(this.grid)}}const x=v=>Array(v).fill(null).map(()=>Array(v).fill(null).map(()=>"clear")),k=v=>{const e=JSON.stringify(v);let t=0;for(let o=0;o<e.length;o++){const i=e.charCodeAt(o);t=(t<<5)-t+i,t=t&t}return Math.abs(t).toString(16).slice(0,8)},T=(v,e,t,o,i)=>{const n=Math.abs(t-v),a=Math.abs(o-e),l=v<t?1:-1,h=e<o?1:-1;let s=n-a;for(;i(v,e),!(v===t&&e===o);){const r=2*s;r>-a&&(s-=a,v+=l),r<n&&(s+=n,e+=h)}};class I{constructor(){c(this,"gridSize");c(this,"baseCanvas");c(this,"overlayCanvas");c(this,"canvasContainer");c(this,"grid");c(this,"gridManager");c(this,"backgroundImage",null);c(this,"pixelSize",32);c(this,"canvasSize");c(this,"drawingState",{isDrawing:!1,hoverRegion:null});c(this,"drawingMode","black");c(this,"lastPosition",null);c(this,"previousPosition",null);c(this,"hoverPosition",null);c(this,"mousePosition",null);c(this,"keyboardPosition",null);c(this,"history",[]);c(this,"historyIndex",-1);c(this,"handleMouseDown",e=>{const t=this.getMousePosition(e);if(!t)return;this.drawingState.isDrawing=!0,this.drawingState.hoverRegion=t.region,this.lastPosition=t,this.previousPosition=t,this.hoverPosition=t;const o=t.region==="center"?"black":t.region;this.grid[t.row][t.col]!==o&&(this.gridManager.updatePixel(t.row,t.col,o),this.saveToHistory())});c(this,"handleMouseMove",e=>{const t=this.baseCanvas.getBoundingClientRect(),o=e.clientX-t.left,i=e.clientY-t.top;this.mousePosition={x:o,y:i};const n=this.getMousePosition(e);if(n){if(this.drawingState.isDrawing&&this.previousPosition){this.hoverPosition={...n,region:this.drawingState.hoverRegion||n.region};const a=this.drawingState.hoverRegion==="center"?"black":this.drawingState.hoverRegion||n.region;let l=!1;T(this.previousPosition.col,this.previousPosition.row,n.col,n.row,(h,s)=>{h>=0&&h<this.gridSize&&s>=0&&s<this.gridSize&&this.grid[s][h]!==a&&(this.gridManager.updatePixel(s,h,a),l=!0)}),l&&this.saveToHistory(),this.previousPosition=n}else this.hoverPosition=n;this.drawOverlay()}});c(this,"handleMouseUp",()=>{if(this.drawingState.isDrawing){const e=JSON.stringify(this.grid),t=this.historyIndex>=0?JSON.stringify(this.history[this.historyIndex]):null;e!==t&&this.saveToHistory()}this.drawingState.isDrawing=!1,this.lastPosition=null,this.previousPosition=null});c(this,"handleMouseLeave",()=>{this.hoverPosition=null,this.mousePosition=null,this.drawOverlay()});c(this,"exportAsPNG",()=>{const e=k(this.grid),t=document.createElement("canvas"),o=this.gridSize*32;t.width=o,t.height=o;const i=t.getContext("2d");i&&(i.fillStyle="white",i.fillRect(0,0,o,o),this.grid.forEach((n,a)=>{n.forEach((l,h)=>{const s=h*32,r=a*32;if(l==="black")i.fillStyle="black",i.fillRect(s,r,32,32);else if(l!=="clear"){switch(i.fillStyle="black",i.beginPath(),l){case"top-left":i.moveTo(s,r),i.lineTo(s,r+32),i.lineTo(s+32,r);break;case"top-right":i.moveTo(s,r),i.lineTo(s+32,r),i.lineTo(s+32,r+32);break;case"bottom-left":i.moveTo(s,r),i.lineTo(s,r+32),i.lineTo(s+32,r+32);break;case"bottom-right":i.moveTo(s+32,r),i.lineTo(s,r+32),i.lineTo(s+32,r+32);break}i.closePath(),i.fill()}})}),t.toBlob(n=>{n&&z.saveAs(n,`${e}.png`)}))});c(this,"exportAsSVG",()=>{const e=k(this.grid),t=document.createElementNS("http://www.w3.org/2000/svg","svg"),o=this.gridSize*d;t.setAttribute("width",`${o}`),t.setAttribute("height",`${o}`),t.setAttribute("viewBox",`0 0 ${o} ${o}`),this.grid.forEach((a,l)=>{a.forEach((h,s)=>{if(h==="black"){const r=document.createElementNS("http://www.w3.org/2000/svg","rect");r.setAttribute("x",`${s*d}`),r.setAttribute("y",`${l*d}`),r.setAttribute("width",`${d}`),r.setAttribute("height",`${d}`),r.setAttribute("fill","black"),t.appendChild(r)}else if(h!=="clear"){const r=document.createElementNS("http://www.w3.org/2000/svg","path"),u={"top-left":`M${s*d},${l*d} L${s*d},${(l+1)*d} L${(s+1)*d},${l*d} Z`,"top-right":`M${s*d},${l*d} L${(s+1)*d},${l*d} L${(s+1)*d},${(l+1)*d} Z`,"bottom-left":`M${s*d},${l*d} L${s*d},${(l+1)*d} L${(s+1)*d},${(l+1)*d} Z`,"bottom-right":`M${(s+1)*d},${(l+1)*d} L${s*d},${(l+1)*d} L${(s+1)*d},${l*d} Z`};r.setAttribute("d",u[h]),r.setAttribute("fill","black"),t.appendChild(r)}})});const i=new XMLSerializer().serializeToString(t),n=new Blob([i],{type:"image/svg+xml"});z.saveAs(n,`${e}.svg`)});c(this,"exportAsJSON",()=>{const e=k(this.grid),o={version:2,data:this.grid.map(n=>n.map(a=>{switch(a){case"top-left":return"s";case"top-right":return"a";case"bottom-left":return"w";case"bottom-right":return"q";case"black":return"z";case"clear":return"x"}}).join("")).join("")},i=new Blob([JSON.stringify(o)],{type:"application/json"});z.saveAs(i,`${e}.json`)});c(this,"exportAll",()=>{this.exportAsPNG(),this.exportAsSVG(),this.exportAsJSON()});c(this,"handleFileDrop",e=>{var o;e.preventDefault();const t=(o=e.dataTransfer)==null?void 0:o.files[0];if(t){if(t.type==="application/json"){const i=new FileReader;i.onload=n=>{var a;try{const l=JSON.parse((a=n.target)==null?void 0:a.result);let h,s=null;if(l.version===1)h=l.grid,s=h.length;else if(l.version===2){const r=l.data.length,u=Math.sqrt(r);if(!Number.isInteger(u))throw new Error("Data length is not a perfect square for version 2 JSON");s=u,h=Array(u).fill(null).map(()=>Array(u).fill("clear"));let g=0;for(let f=0;f<u;f++)for(let p=0;p<u;p++)switch(l.data[g++]){case"s":h[f][p]="top-left";break;case"a":h[f][p]="top-right";break;case"w":h[f][p]="bottom-left";break;case"q":h[f][p]="bottom-right";break;case"z":h[f][p]="black";break;case"x":h[f][p]="clear";break}}else throw new Error("Unsupported file version");s&&s>0&&(this.gridSize=s,this.updatePixelSize(),this.updateGridSizeDisplay()),this.gridManager.setGrid(h)}catch(l){console.error("Error loading file:",l)}},i.readAsText(t)}else if(t.type.startsWith("image/")){const i=new FileReader;i.onload=n=>{var l;const a=new Image;a.onload=()=>{this.backgroundImage=a,document.getElementById("clear-background").style.display="block",this.drawBase()},a.src=(l=n.target)==null?void 0:l.result},i.readAsDataURL(t)}}});c(this,"clearBackground",()=>{this.backgroundImage=null,document.getElementById("clear-background").style.display="none",this.drawBase()});c(this,"invertPixels",()=>{const e=this.grid.map(i=>i.map(n=>n==="clear"?"black":n==="black"?"clear":{"top-left":"bottom-right","top-right":"bottom-left","bottom-left":"top-right","bottom-right":"top-left"}[n])),t=JSON.stringify(this.grid),o=JSON.stringify(e);t!==o&&(this.gridManager.setGrid(e),this.saveToHistory())});c(this,"makeGridBigger",()=>{this.resizeGrid(this.gridSize+1)});c(this,"makeGridSmaller",()=>{this.resizeGrid(this.gridSize-1)});this.gridSize=C,this.baseCanvas=document.getElementById("base-canvas"),this.overlayCanvas=document.getElementById("overlay-canvas"),this.canvasContainer=document.querySelector(".canvas-container"),this.grid=x(this.gridSize),this.gridManager=new A(this.grid,e=>{this.grid=e,this.drawBase()}),this.canvasSize=this.gridSize*this.pixelSize,this.initializeEventListeners(),this.updatePixelSize(),window.addEventListener("resize",()=>this.updatePixelSize()),this.saveToHistory(),this.updateGridSizeDisplay()}updatePixelSize(){const e=window.innerHeight;this.pixelSize=Math.floor((e-100)/this.gridSize),this.canvasSize=this.gridSize*this.pixelSize,this.canvasContainer.style.width=`${this.canvasSize}px`,this.canvasContainer.style.height=`${this.canvasSize}px`;const t=window.devicePixelRatio||1;this.baseCanvas.width=this.canvasSize*t,this.baseCanvas.height=this.canvasSize*t,this.overlayCanvas.width=this.canvasSize*t,this.overlayCanvas.height=this.canvasSize*t;const o=this.baseCanvas.getContext("2d"),i=this.overlayCanvas.getContext("2d");o&&i&&(o.scale(t,t),i.scale(t,t)),this.baseCanvas.style.width=`${this.canvasSize}px`,this.baseCanvas.style.height=`${this.canvasSize}px`,this.overlayCanvas.style.width=`${this.canvasSize}px`,this.overlayCanvas.style.height=`${this.canvasSize}px`,this.drawBase()}drawBase(){const e=this.baseCanvas.getContext("2d");if(e){e.clearRect(0,0,this.canvasSize,this.canvasSize),e.fillStyle="white",e.fillRect(0,0,this.canvasSize,this.canvasSize),this.backgroundImage&&(e.globalAlpha=.5,e.drawImage(this.backgroundImage,0,0,this.canvasSize,this.canvasSize),e.globalAlpha=1),e.strokeStyle="#cccccc",e.lineWidth=.5,e.translate(.25,.25),e.beginPath();for(let t=0;t<=this.gridSize;t++){const o=t*this.pixelSize,i=(this.gridSize-t)*this.pixelSize;t>0&&t<this.gridSize&&(e.moveTo(o,0),e.lineTo(o,this.canvasSize),e.moveTo(0,o),e.lineTo(this.canvasSize,o)),e.moveTo(o,0),e.lineTo(this.canvasSize,i),e.moveTo(i,0),e.lineTo(0,i),t>0&&(e.moveTo(0,o),e.lineTo(i,this.canvasSize),e.moveTo(this.canvasSize,i),e.lineTo(i,this.canvasSize))}e.stroke(),e.translate(-.25,-.25),e.fillStyle="black",this.grid.forEach((t,o)=>{t.forEach((i,n)=>{if(i==="clear")return;const a=n*this.pixelSize,l=o*this.pixelSize;if(i==="black")e.fillRect(a,l,this.pixelSize,this.pixelSize);else{switch(e.beginPath(),i){case"top-left":e.moveTo(a,l),e.lineTo(a,l+this.pixelSize),e.lineTo(a+this.pixelSize,l);break;case"top-right":e.moveTo(a,l),e.lineTo(a+this.pixelSize,l),e.lineTo(a+this.pixelSize,l+this.pixelSize);break;case"bottom-left":e.moveTo(a,l),e.lineTo(a,l+this.pixelSize),e.lineTo(a+this.pixelSize,l+this.pixelSize);break;case"bottom-right":e.moveTo(a+this.pixelSize,l),e.lineTo(a,l+this.pixelSize),e.lineTo(a+this.pixelSize,l+this.pixelSize);break}e.closePath(),e.fill()}})})}}drawOverlay(){const e=this.overlayCanvas.getContext("2d");if(e){if(e.clearRect(0,0,this.canvasSize,this.canvasSize),this.hoverPosition){const t=this.hoverPosition.col*this.pixelSize,o=this.hoverPosition.row*this.pixelSize;e.fillStyle="rgba(255, 0, 0, 0.3)";const i=this.drawingState.isDrawing?this.drawingState.hoverRegion||this.hoverPosition.region:this.hoverPosition.region;if(i==="black"||i==="center"||i==="clear")e.fillRect(t,o,this.pixelSize,this.pixelSize);else{switch(e.beginPath(),i){case"top-left":e.moveTo(t,o),e.lineTo(t,o+this.pixelSize),e.lineTo(t+this.pixelSize,o);break;case"top-right":e.moveTo(t,o),e.lineTo(t+this.pixelSize,o),e.lineTo(t+this.pixelSize,o+this.pixelSize);break;case"bottom-left":e.moveTo(t,o),e.lineTo(t,o+this.pixelSize),e.lineTo(t+this.pixelSize,o+this.pixelSize);break;case"bottom-right":e.moveTo(t+this.pixelSize,o),e.lineTo(t,o+this.pixelSize),e.lineTo(t+this.pixelSize,o+this.pixelSize);break}e.closePath(),e.fill()}}this.mousePosition&&(e.fillStyle="red",e.beginPath(),e.arc(this.mousePosition.x,this.mousePosition.y,2,0,Math.PI*2),e.fill())}}getMousePosition(e){const t=this.baseCanvas.getBoundingClientRect(),o=e.clientX-t.left,i=e.clientY-t.top,n=Math.floor(o/this.pixelSize),a=Math.floor(i/this.pixelSize);if(n<0||n>=this.gridSize||a<0||a>=this.gridSize)return null;const l=o%this.pixelSize/this.pixelSize,h=i%this.pixelSize/this.pixelSize;let s;return l+h<.5?s="top-left":l+h>1.5?s="bottom-right":l-h>.5?s="top-right":h-l>.5?s="bottom-left":s="center",{row:a,col:n,region:s}}saveToHistory(){const e=JSON.stringify(this.grid),t=this.historyIndex>=0?JSON.stringify(this.history[this.historyIndex]):null;e!==t&&(this.history=this.history.slice(0,this.historyIndex+1),this.history.push(this.grid.map(o=>[...o])),this.historyIndex++,this.history.length>100&&(this.history=this.history.slice(-100),this.historyIndex=this.history.length-1))}undo(){this.historyIndex>0&&(this.historyIndex--,this.grid=this.history[this.historyIndex].map(e=>[...e]),this.gridManager.setGrid(this.grid))}redo(){this.historyIndex<this.history.length-1&&(this.historyIndex++,this.grid=this.history[this.historyIndex].map(e=>[...e]),this.gridManager.setGrid(this.grid))}shiftGrid(e){const t=x(this.gridSize);for(let o=0;o<this.gridSize;o++)for(let i=0;i<this.gridSize;i++){let n=o,a=i;switch(e){case"up":n=(o+1)%this.gridSize;break;case"down":n=(o-1+this.gridSize)%this.gridSize;break;case"left":a=(i+1)%this.gridSize;break;case"right":a=(i-1+this.gridSize)%this.gridSize;break}t[o][i]=this.grid[n][a]}this.gridManager.setGrid(t),this.saveToHistory()}resizeGrid(e){if(e<1)return;const t=this.grid,o=e,i=x(o);for(let n=0;n<Math.min(o,t.length);n++)for(let a=0;a<Math.min(o,t[n].length);a++)i[n][a]=t[n][a];this.gridSize=o,this.gridManager.setGrid(i),this.updatePixelSize(),this.saveToHistory(),this.updateGridSizeDisplay()}initializeEventListeners(){var e,t,o,i,n,a,l;this.baseCanvas.addEventListener("mousedown",this.handleMouseDown),this.baseCanvas.addEventListener("mousemove",this.handleMouseMove),this.baseCanvas.addEventListener("mouseup",this.handleMouseUp),this.baseCanvas.addEventListener("mouseleave",this.handleMouseLeave),this.overlayCanvas.addEventListener("mousedown",this.handleMouseDown),this.overlayCanvas.addEventListener("mousemove",this.handleMouseMove),this.overlayCanvas.addEventListener("mouseup",this.handleMouseUp),this.overlayCanvas.addEventListener("mouseleave",this.handleMouseLeave),document.addEventListener("keydown",h=>{const s=h.key.toLowerCase();let r=null;if(s==="z"&&(h.ctrlKey||h.metaKey)){h.shiftKey?this.redo():this.undo();return}switch(s){case"arrowup":this.shiftGrid("up");return;case"arrowdown":this.shiftGrid("down");return;case"arrowleft":this.shiftGrid("left");return;case"arrowright":this.shiftGrid("right");return;case"z":r="black";break;case"y":if(h.ctrlKey||h.metaKey){this.redo();return}break;case"x":r="clear";break;case"q":r="bottom-right";break;case"w":r="bottom-left";break;case"a":r="top-right";break;case"s":r="top-left";break;case"i":this.invertPixels();return}r!==null&&(this.drawingState.isDrawing=!0,this.drawingMode=r,this.drawingState.hoverRegion=r,this.drawOverlay()),r!==null&&this.hoverPosition&&this.grid[this.hoverPosition.row][this.hoverPosition.col]!==r&&(this.keyboardPosition={row:this.hoverPosition.row,col:this.hoverPosition.col},this.gridManager.updatePixel(this.hoverPosition.row,this.hoverPosition.col,r),this.saveToHistory())}),document.addEventListener("keyup",h=>{const s=h.key.toLowerCase();if(["z","x","q","w","a","s"].includes(s)){if(this.drawingState.isDrawing){const r=JSON.stringify(this.grid),u=this.historyIndex>=0?JSON.stringify(this.history[this.historyIndex]):null;r!==u&&this.saveToHistory()}this.drawingState.isDrawing=!1,this.keyboardPosition=null}}),document.addEventListener("mousemove",h=>{if(this.drawingState.isDrawing&&this.keyboardPosition&&this.hoverPosition){let s=!1;T(this.keyboardPosition.col,this.keyboardPosition.row,this.hoverPosition.col,this.hoverPosition.row,(r,u)=>{r>=0&&r<this.gridSize&&u>=0&&u<this.gridSize&&this.grid[u][r]!==this.drawingMode&&(this.gridManager.updatePixel(u,r,this.drawingMode),s=!0)}),s&&this.saveToHistory(),this.keyboardPosition={row:this.hoverPosition.row,col:this.hoverPosition.col}}}),(e=document.getElementById("export-png"))==null||e.addEventListener("click",this.exportAsPNG),(t=document.getElementById("export-svg"))==null||t.addEventListener("click",this.exportAsSVG),(o=document.getElementById("export-json"))==null||o.addEventListener("click",this.exportAsJSON),(i=document.getElementById("export-all"))==null||i.addEventListener("click",this.exportAll),(n=document.getElementById("clear-background"))==null||n.addEventListener("click",this.clearBackground),(a=document.getElementById("bigger-grid"))==null||a.addEventListener("click",this.makeGridBigger),(l=document.getElementById("smaller-grid"))==null||l.addEventListener("click",this.makeGridSmaller),document.addEventListener("dragover",h=>h.preventDefault()),document.addEventListener("drop",this.handleFileDrop)}updateGridSizeDisplay(){const e=document.getElementById("grid-size-display");e&&(e.textContent=this.gridSize.toString())}}new I;
